{"timestamp":"1426806405","author":"amshali@google.com","description":"Can you add a readme explaining how the whole thing works? \\nBTW, how does the mirror tool marks a commit as sent for review so that it does not do it again? Or is that something that arc handles?"}

{"timestamp":"1426806405","author":"amshali@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/mirror/mirror.go","range":{"startLine":39}},"description":"The name of func might better be MirrorRepo to express what it does. \"Repo\" sounds very general."}

{"timestamp":"1426806405","author":"amshali@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/mirror/review/review.go","range":{"startLine":25}},"description":"What is the purpose of this interface? Interface between what?"}

{"timestamp":"1426806405","author":"amshali@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/mirror/review/review.go","range":{"startLine":27}},"description":"Document this method."}

{"timestamp":"1426806405","author":"amshali@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/main.go","range":{"startLine":49}},"description":"What is this SkipDir and why is it returned here?"}

{"timestamp":"1426806405","author":"amshali@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/main.go","range":{"startLine":27}},"description":"A comment would be useful on how this func finds repos. "}

{"timestamp":"1426807554","author":"ojarjur@google.com","description":"  - Added comments for specific lines as requested in code review (D15)\\n"}

{"timestamp":"1426807684","author":"ojarjur@google.com","description":"\u003e Can you add a readme explaining how the whole thing works? \\n\\nThere is already a README, it just was added before this change.\\n\\n\u003e BTW, how does the mirror tool marks a commit as sent for review so that it does not do it again? Or is that something that arc handles?\\n\\nIt queries Phabricator to find matching reviews, and does not re-add the review if a matching one already exists."}

{"timestamp":"1426807684","author":"ojarjur@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/mirror/review/review.go","range":{"startLine":27}},"description":"Done."}

{"timestamp":"1426807684","author":"ojarjur@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/mirror/review/review.go","range":{"startLine":25}},"description":"Done."}

{"timestamp":"1426807684","author":"ojarjur@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/main.go","range":{"startLine":49}},"description":"It's a special value that tells the filepath.Walk method to not go any deeper.\\n\\nI added a comment explaining why we are returning it."}

{"timestamp":"1426807684","author":"ojarjur@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/main.go","range":{"startLine":27}},"description":"Done."}

{"timestamp":"1426807684","author":"ojarjur@google.com","location":{"commit":"e3e1155000626cf2275e352d247068b0ffcd1a50","path":"src/mirror/mirror.go","range":{"startLine":39}},"description":"This is actually the recommended naming pattern in Go. The client has to refer to the method using \u003cpackageName\u003e.\u003cmethodName\u003e, so they wind up saying \"mirror.Repo\".\\n\\nIf it was actually named \"MirrorRepo\", then the golint tool would complain saying that mirror.MirrorRepo \"stutters\" (that's the actual way it describes it)."}

{"timestamp":"1426810462","author":"amshali@google.com","resolved":true}
